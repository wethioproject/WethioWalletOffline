{"version":3,"sources":["components/pages/Layout/components/LeftPanel.js","components/ReusableComponent/SwitchChain.js","components/pages/Layout/components/RightTopPanel.js","components/pages/Layout/Layout.js","components/pages/MyTokens/Component/JSONFileReader.js","components/pages/MyTokens/Component/TransactionForm.js","components/pages/MyTokens/MyTokens.js"],"names":["LeftPanel","className","Portfolio","SwitchChain","useState","selectedNetwork","setSelectedNetwork","t","useTranslation","dispatch","useDispatch","chainId","useSelector","dapp","handleChangeNetwork","newNetwork","setChainId","RPC_SERVER","networkId","useEffect","setNetwork","NETWORKID","CHAIN_TYPE","network","JSON","parse","sessionStorage","getItem","onClick","RightTopPanel","Layout","children","JSONFileReader","fileInputRef","useRef","ref","type","accept","onChange","event","file","target","files","reader","FileReader","onload","e","jsonData","result","isValidJSON","setJsonData","toast","error","MESSAGES","JSON_NOT_VALID","console","readAsText","current","click","validationSchema","Yup","shape","amount","typeError","required","moreThan","ethereumAddress","test","value","a","webInstance","createWeb3","utils","isAddress","nonce","min","data","gasLimit","integer","gasPrice","positive","TransactionForm","navigate","useNavigate","DEFAULT_TOKEN","tokenOption","setTokenOption","decryptedRP","privateKey","CryptoJS","AES","decrypt","toString","enc","Utf8","selectedToken","setSelectedToken","INITIAL_VALUES","tokenList","TRANSACTION_DATA","GAS_LIMIT_CURRENCY","formik","useFormik","initialValues","onSubmit","values","transactionObject","to","tokenAddress","label","signCurrencyTransaction","signTokenTransaction","response","_","isEmpty","ROUTES","TRANSACTION","state","setForm","AddressVal","name","amountVal","setValues","encodeData","GAS_LIMIT_TOKEN","handleFieldChange","handleChange","hexToNumber","chainID","handleSubmit","htmlFor","options","selectedOption","isSearchable","placeholder","id","onBlur","handleBlur","touched","errors","disabled","MyTokens"],"mappings":"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","file":"static/js/5.2062da73.chunk.js","sourcesContent":["import React from \"react\";\nimport Portfolio from \"./Portfolio\";\n\nconst LeftPanel = () => {\n  return (\n    <div className=\"h-full boxshadow bg-gradient-to-tl from-themeg1 to theme-g2 xl:p-6 lg:p-4 p-2 rounded-xl overflow-hidden flex flex-col gap-16 border border-themeg2 text-themeblue\">\n      <Portfolio />\n    </div>\n  );\n};\n\nexport default LeftPanel;\n","import React, { useEffect, useState } from \"react\";\nimport { IoChevronDown } from \"react-icons/io5\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CHAIN_TYPE, NETWORKID, RPC_SERVER } from \"../constants/appConstants\";\nimport { setChainId } from \"../store/slices/dappSlice\";\nimport { setNetwork } from \"../utils/storage\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SwitchChain = () => {\n  const [selectedNetwork, setSelectedNetwork] = useState(\"Mainnet\");\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { chainId } = useSelector(({ dapp }) => dapp);\n  const handleChangeNetwork = (newNetwork) => {\n    dispatch(setChainId(RPC_SERVER[newNetwork]?.networkId));\n  };\n\n  useEffect(() => {\n    setNetwork(NETWORKID[chainId]);\n    setSelectedNetwork(CHAIN_TYPE[chainId]);\n  }, [chainId]);\n\n  useEffect(() => {\n    const network = JSON.parse(sessionStorage.getItem(\"global\"));\n    network.network === \"WETHIOCHAIN_MAINNET\" && setSelectedNetwork(\"Mainnet\");\n    network.network === \"WETHIOCHAIN_TESTNET\" && setSelectedNetwork(\"Testnet\");\n  }, []);\n\n  return (\n    <div className=\"relative group\">\n      <label className=\"cursor-pointer flex items-center gap-1\">\n        <span className=\"p-1.5 rounded-full bg-themegreen animate-blink\"></span>\n        <span className=\"flex gap-1 items-center\">\n          {t(selectedNetwork)} <IoChevronDown />\n        </span>\n      </label>\n      <div\n        className={` rounded-xl border border-themeg2 flex-col gap-2 bg-themeg1 p-2 group-hover:visible invisible z-40\n          }`}\n      >\n        <button\n          className=\"py-2 px-1 cursor-pointer flex gap-2 items-center\"\n          onClick={() => {\n            handleChangeNetwork(\"WETHIOCHAIN_MAINNET\");\n          }}\n        >\n          {selectedNetwork === \"Mainnet\" ? (\n            <span className=\"p-1.5 rounded-full bg-themegreen\"></span>\n          ) : (\n            <span className=\"p-1.5 rounded-full bg-gray-400\"></span>\n          )}\n          {t(\"Mainnet\")}\n        </button>\n        <button\n          className=\"py-2 px-1 cursor-pointer flex gap-2 items-center\"\n          onClick={() => {\n            handleChangeNetwork(\"WETHIOCHAIN_TESTNET\");\n          }}\n        >\n          {selectedNetwork === \"Testnet\" ? (\n            <span className=\"p-1.5 rounded-full bg-themegreen\"></span>\n          ) : (\n            <span className=\"p-1.5 rounded-full bg-gray-400\"></span>\n          )}\n          {t(\"Testnet\")}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SwitchChain;\n","import SwitchChain from \"../../../ReusableComponent/SwitchChain\";\n\nconst RightTopPanel = () => {\n  return (\n    <div className=\"boxshadow bg-gradient-to-tl from-themeg1 to theme-g2 px-2 2xl:py-12 py-4 rounded-xl flex 2xl:flex-row flex-col 2xl:gap-2 gap-4 items-center justify-center border border-themeg2 text-themeblue font-medium w-full\">\n      <SwitchChain />\n    </div>\n  );\n};\n\nexport default RightTopPanel;\n","import LeftPanel from \"./components/LeftPanel\";\nimport RightTopPanel from \"./components/RightTopPanel\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"flex lg:gap-4 gap-3 px-2\">\n      <div className=\"hidden sm:block lg:w-6/20 w-5/12 overflow-hidden\">\n        <LeftPanel />\n      </div>\n      <div className=\"flex flex-col gap-0 xl:w-13/20  sm:w-3/5 w-full  overflow-hidden rounded-xl\">\n        \n        {children}\n      </div>\n      <div className=\"hidden sm:block flex flex-col gap-4 xl:w-1/5 lg:w-1/4 w-3/12 overflow-hidden rounded-xl h-full\">\n        <RightTopPanel />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setJsonData } from \"../../../store/slices/dappSlice\";\nimport { useTranslation } from \"react-i18next\";\nimport { isValidJSON } from \"../../../common/common\";\nimport { MESSAGES } from \"../../../constants/appConstants\";\nimport { toast } from \"react-toastify\";\n\nconst JSONFileReader = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const fileInputRef = useRef(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          const jsonValidity = isValidJSON(jsonData);\n          if (!jsonValidity) {\n            dispatch(setJsonData(null));\n            toast.error(MESSAGES.JSON_NOT_VALID);\n            return;\n          }\n          dispatch(setJsonData(jsonData));\n        } catch (error) {\n          console.error(\"Error parsing JSON file:\", error);\n          dispatch(setJsonData(null));\n        }\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className=\"flex justify-center p-5\">\n      <div className=\"text-center px-4\">\n        <input\n          ref={fileInputRef}\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleFileChange}\n        />\n        <button\n          className=\"px-4 py-2 bg-gradient-to-l font-medium flex gap-4 group rounded-xl from-themeg1 to-themeg2 boxshadow border border-themeg2 font-bold\"\n          onClick={handleButtonClick}\n        >\n          {t(\"Upload JSON File\")}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default JSONFileReader;\n","import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createWeb3 } from \"../../../utils/wallet\";\nimport CryptoJS from \"crypto-js\";\nimport { hexToNumber } from \"../../../utils/utilities\";\nimport { setChainId } from \"../../../store/slices/dappSlice\";\nimport _ from \"lodash\";\nimport Select from \"react-select\";\nimport {\n  encodeData,\n  signCurrencyTransaction,\n  signTokenTransaction,\n} from \"../../../common/common\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  DEFAULT_TOKEN,\n  GAS_LIMIT_CURRENCY,\n  GAS_LIMIT_TOKEN,\n  NETWORKID,\n  ROUTES,\n  TRANSACTION_DATA,\n  tokenList,\n} from \"../../../constants/appConstants\";\nimport { useTranslation } from \"react-i18next\";\n\nconst validationSchema = Yup.object().shape({\n  // token: Yup.string().required(\"Token List is required\"),\n  amount: Yup.number()\n    .typeError(\"Enter a valid Amount\")\n    .required(\"Amount is required\")\n    .moreThan(0, \"Enter a valid Amount\"),\n  ethereumAddress: Yup.string()\n    .required(\"Address is required\")\n    .test(\"ethereumAddress\", \"Invalid Address\", async (value) => {\n      if (!value) return false;\n      try {\n        const webInstance = createWeb3(null, null);\n        return webInstance.utils.isAddress(value);\n      } catch (error) {\n        return false;\n      }\n    }),\n  nonce: Yup.number()\n    .typeError(\"Enter a valid Nonce\")\n    .required(\"Nonce is required\")\n    .min(0, \"Enter a valid Nonce\"),\n  data: Yup.string().required(\"Data is required\"),\n  gasLimit: Yup.number()\n    .required(\"Gas Limit is required\")\n    .integer(\"Gas Limit must be an integer\"),\n  gasPrice: Yup.number()\n    .required(\"Gas Price is required\")\n    .positive(\"Invalid Gas Price\"),\n});\n\nconst TransactionForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [tokenOption, setTokenOption] = useState([DEFAULT_TOKEN]);\n  const { t } = useTranslation();\n  const { chainId } = useSelector(({ dapp }) => dapp);\n  const decryptedRP = sessionStorage.getItem(\"privateKey\");\n  const privateKey =\n    decryptedRP &&\n    CryptoJS.AES.decrypt(decryptedRP, \"mKzwETNaKl\").toString(CryptoJS.enc.Utf8);\n  const { jsonData } = useSelector(({ dapp }) => dapp);\n  const [selectedToken, setSelectedToken] = useState(DEFAULT_TOKEN);\n\n  const INITIAL_VALUES = {\n    tokenList: \"\",\n    amount: \"\",\n    ethereumAddress: \"\",\n    nonce: \"\",\n    data: TRANSACTION_DATA,\n    gasLimit: GAS_LIMIT_CURRENCY,\n    gasPrice: \"\",\n  };\n  const formik = useFormik({\n    initialValues: INITIAL_VALUES,\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      // Handle form submission here\n      const transactionObject = {\n        nonce: values.nonce,\n        gasPrice: values.gasPrice,\n        privateKey: privateKey,\n        gasLimit: values.gasLimit,\n        chainId: chainId,\n        to: values.ethereumAddress,\n        tokenAddress: selectedToken?.value,\n        amount: values.amount,\n      };\n      const response =\n        selectedToken?.label === DEFAULT_TOKEN?.label\n          ? await signCurrencyTransaction(transactionObject)\n          : await signTokenTransaction(transactionObject);\n      if (!_.isEmpty(response))\n        navigate(`${ROUTES.TRANSACTION}`, { state: response });\n    },\n  });\n\n  const setForm = (e) => {\n    const webInstance = createWeb3(null, null);\n\n    const AddressVal =\n      e?.target?.name === \"ethereumAddress\"\n        ? e?.target?.value\n        : formik.values.ethereumAddress;\n    const isAddress = webInstance.utils.isAddress(AddressVal);\n    const amountVal =\n      e?.target?.name === \"amount\" ? e?.target?.value : formik.values.amount;\n    const isNumeric = /^[0-9]*\\.?[0-9]*$/.test(amountVal);\n\n    // Use formik.handleChange to update the form values\n    if (isNumeric && isAddress && selectedToken?.value && amountVal) {\n      formik.setValues({\n        ...formik.values,\n        data:\n          selectedToken?.value === DEFAULT_TOKEN.value\n            ? TRANSACTION_DATA\n            : encodeData(AddressVal, selectedToken?.value, amountVal),\n        gasLimit:\n          selectedToken?.label === DEFAULT_TOKEN?.label\n            ? GAS_LIMIT_CURRENCY\n            : GAS_LIMIT_TOKEN,\n      });\n    } else {\n      formik.setValues({\n        ...formik.values,\n        data: TRANSACTION_DATA,\n        gasLimit:\n          selectedToken?.label === DEFAULT_TOKEN?.label\n            ? GAS_LIMIT_CURRENCY\n            : GAS_LIMIT_TOKEN,\n      });\n    }\n  };\n  const handleFieldChange = (e) => {\n    setForm(e);\n    formik.handleChange(e);\n  };\n  useEffect(() => {\n    setForm();\n  }, [selectedToken]);\n  useEffect(() => {\n    setSelectedToken(DEFAULT_TOKEN);\n    setTokenOption([DEFAULT_TOKEN, ...tokenList[NETWORKID[chainId]]]);\n  }, [chainId]);\n\n  // Use useEffect to update form values when jsonData changes\n  useEffect(() => {\n    if (jsonData) {\n      // Update form values with jsonData\n      const webInstance = createWeb3(null, null);\n      dispatch(setChainId(hexToNumber(webInstance, jsonData.chainID)));\n      formik.setValues({\n        ...formik.values,\n        nonce: hexToNumber(webInstance, jsonData.nonce),\n        gasLimit:\n          selectedToken?.label === DEFAULT_TOKEN?.label\n            ? GAS_LIMIT_CURRENCY\n            : GAS_LIMIT_TOKEN,\n        data: TRANSACTION_DATA,\n        gasPrice: hexToNumber(webInstance, jsonData.gasPrice),\n      });\n    } else {\n      formik.setValues(INITIAL_VALUES);\n    }\n  }, [jsonData]);\n\n  return (\n    <div className=\" mx-auto  mt-12 sm:mt-8 rounded-md\">\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"mb-4\">\n            <label\n              htmlFor=\"token\"\n              className=\"block text-sm font-medium text-gray-600\"\n            >\n              {t(\"Select Token\")}\n            </label>\n            <Select\n              options={tokenOption}\n              value={selectedToken}\n              name=\"token\"\n              onChange={(selectedOption) => setSelectedToken(selectedOption)}\n              isSearchable\n              placeholder={t(\"Select Token\")}\n              className=\"mt-1\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label\n              htmlFor=\"amount\"\n              className=\"block text-sm font-medium text-gray-600\"\n            >\n              {t(\"Amount\")}\n            </label>\n            <input\n              type=\"text\"\n              id=\"amount\"\n              name=\"amount\"\n              onChange={handleFieldChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.amount}\n              className=\"mt-1 p-2 w-full border rounded-md\"\n            />\n            {formik.touched.amount && formik.errors.amount && (\n              <div className=\"text-red-500 text-sm\">{formik.errors.amount}</div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"mb-4\">\n          <label\n            htmlFor=\"ethereumAddress\"\n            className=\"block text-sm font-medium text-gray-600\"\n          >\n            {t(\"To Address\")}\n          </label>\n          <input\n            type=\"text\"\n            id=\"ethereumAddress\"\n            name=\"ethereumAddress\"\n            onChange={handleFieldChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.ethereumAddress}\n            className=\"mt-1 p-2 w-full border rounded-md\"\n          />\n          {formik.touched.ethereumAddress && formik.errors.ethereumAddress && (\n            <div className=\"text-red-500 text-sm\">\n              {formik.errors.ethereumAddress}\n            </div>\n          )}\n        </div>\n\n        <div className=\"mb-4\">\n          <label\n            htmlFor=\"nonce\"\n            className=\"block text-sm font-medium text-gray-600\"\n          >\n            {t(\"Nonce\")}\n          </label>\n          <input\n            type=\"text\"\n            id=\"nonce\"\n            name=\"nonce\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.nonce}\n            className=\"mt-1 p-2 w-full border rounded-md\"\n          />\n          {formik.touched.nonce && formik.errors.nonce && (\n            <div className=\"text-red-500 text-sm\">{formik.errors.nonce}</div>\n          )}\n        </div>\n\n        <div className=\"mb-4\">\n          <label\n            htmlFor=\"data\"\n            className=\"block text-sm font-medium text-gray-600\"\n          >\n            {t(\"Data\")}\n          </label>\n          <input\n            id=\"data\"\n            name=\"data\"\n            disabled\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.data}\n            className=\"bg-white mt-1 p-2 w-full border rounded-md\"\n          />\n          {formik.touched.data && formik.errors.data && (\n            <div className=\"text-red-500 text-sm\">{formik.errors.data}</div>\n          )}\n        </div>\n\n        <div className=\"mb-4\">\n          <label\n            htmlFor=\"gasLimit\"\n            className=\"block text-sm font-medium text-gray-600\"\n          >\n            {t(\"Gas Limit\")}\n          </label>\n          <input\n            type=\"text\"\n            id=\"gasLimit\"\n            name=\"gasLimit\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.gasLimit}\n            className=\"mt-1 p-2 w-full border rounded-md\"\n          />\n          {formik.touched.gasLimit && formik.errors.gasLimit && (\n            <div className=\"text-red-500 text-sm\">{formik.errors.gasLimit}</div>\n          )}\n        </div>\n        <div className=\"mb-4\">\n          <label\n            htmlFor=\"gasPrice\"\n            className=\"block text-sm font-medium text-gray-600\"\n          >\n            {t(\"Gas Price\")}\n          </label>\n          <input\n            type=\"text\"\n            id=\"gasPrice\"\n            name=\"gasPrice\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.gasPrice}\n            className=\"mt-1 p-2 w-full border rounded-md\"\n          />\n          {formik.touched.gasPrice && formik.errors.gasPrice && (\n            <div className=\"text-red-500 text-sm\">{formik.errors.gasPrice}</div>\n          )}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-center\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-gradient-to-l font-medium flex gap-4 group rounded-xl from-themeg1 to-themeg2 boxshadow border border-themeg2 font-bold\"\n          >\n            {t(\"Generate Transaction\")}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TransactionForm;\n","import React, { useEffect } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport { useTranslation } from \"react-i18next\";\nimport JSONFileReader from \"./Component/JSONFileReader\";\nimport TransactionForm from \"./Component/TransactionForm\";\nimport SwitchChain from \"../../ReusableComponent/SwitchChain\";\nimport { useDispatch } from \"react-redux\";\nimport { setJsonData } from \"../../store/slices/dappSlice\";\nconst MyTokens = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(setJsonData(null));\n    };\n  }, []);\n  return (\n    <Layout>\n      <div className=\"boxshadow bg-gradient-to-tl flex-1 from-themeg1 to theme-g2 p-6 rounded-xl border border-themeg2 flex flex-col text-themeblue gap-4\">\n        <div>\n          <div className=\"text-2xl font-bold\">\n            <div>{t(\"Send Offline\")}</div>\n            <div className=\"py-2 block sm:hidden absolute z-10\">\n              <SwitchChain />\n            </div>\n          </div>\n          <TransactionForm />\n          <JSONFileReader />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default MyTokens;\n"],"sourceRoot":""}